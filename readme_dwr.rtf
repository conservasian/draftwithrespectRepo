{\rtf1\ansi\ansicpg1252\cocoartf1561\cocoasubrtf400
{\fonttbl\f0\fmodern\fcharset0 CourierNewPSMT;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 draftwithrespect readme\
\
To do:\
- display defensive players with incident first\
\'97 better yet, present them in a defensive lineup format\
\
- table should sort by alphabetical and by # incidents (tablesorter plugin)\
\
- search by team?\
\
- add link to Google search after list of sources\
- automatically pull NFL rosters once a month (or manual reminder\'85)\
\
- script that sorts players by current team (to see which first-line people are in the database) \
\
- email address using domain\
\
- include all active players with incidents in random placeholder\
\
- make list of non-active players with incidents\
\
- internal script that checks if first-line defensive players from each team have been looked up\
\
\
Bugs:\
- searching on Table of Players page does not go to home page\
- no link appears for \'93no assault-related records found\'94 hits\
\
\
How to maintain:\
\
1. update NFL roster so players\'92 teams are up-to-date\
>> python nfl_scraper.py\
\
2. check if first-line defensive players are accurate\
>> python depth_scraper.py\
>> python first_line.py\
\
3. keep incidents database updated\
- download Google Sheet as .csv file\
>> python incidents2json.py\
>> python check_incident_positions.py (for checking misspellings)\
\
4a. if offensive players added\
>> python makeTableOffensePage.py\
\
4b. if defensive players added\
>> python team_defenses.py\
>> python makeTableDefensePage.py\
\
5. if index.html changes (e.g. script), update side and table pages\
>> python makeSidePages.py\
\
6. push to GitHub\
>> git add .\
>> git commit -m \'93message\'94\
>> git push origin master}